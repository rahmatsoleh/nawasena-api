// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
  provider
}

enum ServiceStatus {
  active
  nonactive
  busy
}

enum StatusTransaction {
  ditolak
  selesai
}

model User {
  id              String           @id @default(cuid())
  email           String           @unique
  password        String
  phoneNumber     String           @unique @db.VarChar(13)
  name            String           @db.VarChar(100)
  role            Role             @default(user)
  isConfirmed     Boolean          @default(false)
  ProviderDetail  ProviderDetail?
  ProviderService ProviderService?
  RatingService   RatingService[]
  HistoryService  HistoryService[]
}

model ProviderDetail {
  id                 String  @id @default(cuid())
  isVerified         Boolean @default(false)
  joinRequestFileUrl String?
  user               User    @relation(fields: [userId], references: [id])
  userId             String  @unique
}

model ProviderService {
  id                String           @id @default(cuid())
  namaUsaha         String
  koordinat         String?
  service           String
  priceMin          Int
  priceMax          Int
  status            ServiceStatus    @default(nonactive)
  user              User             @relation(fields: [userId], references: [id])
  userId            String           @unique
  categoryProductId String
  categoryProduct   CategoryProduct? @relation(fields: [categoryProductId], references: [id])
  operasionals      Operasionals[]
  ratingService     RatingService[]
  historyService    HistoryService[]
  rating            Float            @default(0)
}

model CategoryProduct {
  id              String            @id @default(cuid())
  name            String            @unique
  ProviderService ProviderService[]
}

model Operasionals {
  id                String          @id @default(cuid())
  day               String
  startAt           String
  EndAt             String
  providerService   ProviderService @relation(fields: [providerServiceId], references: [id])
  providerServiceId String
}

model RatingService {
  id              String            @id @default(cuid())
  rating          Float?
  comment         String?
  providerService ProviderService[]
  user            User              @relation(fields: [userId], references: [id])
  userId          String
}

model HistoryService {
  id                String            @id @default(cuid())
  dateTime          DateTime          @default(now())
  payment           Int
  statusTransaction StatusTransaction @default(selesai)
  user              User              @relation(fields: [userId], references: [id])
  userId            String
  providerService   ProviderService   @relation(fields: [providerServiceId], references: [id])
  providerServiceId String
}
